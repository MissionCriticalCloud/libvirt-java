dnl
dnl configure file for libvirt java bindings
dnl Process this file with autoconf to produce a configure script.
dnl
dnl Copyright (C) Red Hat, Inc.
dnl
dnl See COPYING.LIB for the License of this software
dnl
dnl Daniel Veillard <veillard@redhat.com>
dnl
AC_INIT([libvirt-java], [0.1.2])
AC_CONFIG_SRCDIR([src/jni/org_libvirt_VirDomain.c])
AC_CONFIG_AUX_DIR(.)
AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE([-Wno-portability])
AC_CANONICAL_HOST

LIBVIRT_REQUIRED="0.4.0"

JNI_MAJOR_VERSION=`echo $VERSION | awk -F. '{print $1}'`
JNI_MINOR_VERSION=`echo $VERSION | awk -F. '{print $2}'`
JNI_MICRO_VERSION=`echo $VERSION | awk -F. '{print $3}'`
JNI_VERSION_INFO=`expr $JNI_MAJOR_VERSION + $JNI_MINOR_VERSION`:$JNI_MICRO_VERSION:$JNI_MINOR_VERSION
JNI_VERSION_NUMBER=`expr $JNI_MAJOR_VERSION \* 1000000 + $JNI_MINOR_VERSION \* 1000 + $JNI_MICRO_VERSION`

AC_SUBST([JNI_MAJOR_VERSION])
AC_SUBST([JNI_MINOR_VERSION])
AC_SUBST([JNI_MICRO_VERSION])
AC_SUBST([JNI_VERSION])
AC_SUBST([JNI_VERSION_INFO])
AC_SUBST([JNI_VERSION_NUMBER])

AC_SUBST([LIBVIRT_REQUIRED])

AC_PROG_CC
AC_PROG_INSTALL
AM_PROG_CC_C_O

AC_DISABLE_STATIC
dnl Support building Win32 DLLs (must appear *before* AM_PROG_LIBTOOL)
AC_LIBTOOL_WIN32_DLL
AM_PROG_LIBTOOL

INSTALLED_JAR_DIR=\${prefix}/share/java
INSTALLED_JNI_DIR=\${prefix}/lib/
AC_SUBST(INSTALLED_JAR_DIR)
AC_SUBST(INSTALLED_JNI_DIR)

PKG_CHECK_MODULES(LIBVIRT, libvirt >= $LIBVIRT_REQUIRED)
AC_SUBST(LIBVIRT_CFLAGS)
AC_SUBST(LIBVIRT_LIBS)

dnl
dnl allow the user to specify the version of java either with
dnl --with-java-home or with JAVA_HOME env variable.
dnl
AC_ARG_WITH(java_home,
[  --with-java-home=DIR    path to the Java Development Kit directory(/usr/lib/jvm/java)])

if test x"$with_java_home" != x"no" -a x"$with_java_home" != x"yes" ; then
    if test -d $with_java_home ; then
	JAVA_HOME=$with_java_home
    else
	AC_MSG_ERROR([provided JAVA_HOME $with_java_home is not a directory])
    fi
fi
if test x"$JAVA_HOME" == x"" ; then
    JAVA_HOME=/usr/lib/jvm/java
fi

AC_MSG_CHECKING(for JDK in $JAVA_HOME)
if test ! -d $JAVA_HOME ; then
    AC_MSG_ERROR([JAVA_HOME $JAVA_HOME is not a directory])
fi

if test ! -x $JAVA_HOME/bin/java ; then
    AC_MSG_ERROR([missing $JAVA_HOME/bin/java binary])
else
    JAVA=$JAVA_HOME/bin/java
fi
if test ! -x $JAVA_HOME/bin/javac ; then
    AC_MSG_ERROR([missing $JAVA_HOME/bin/javac binary])
else
    JAVAC=$JAVA_HOME/bin/javac
fi
if test ! -x $JAVA_HOME/bin/javah ; then
    AC_MSG_ERROR([missing $JAVA_HOME/bin/javah binary])
else
    JAVAH=$JAVA_HOME/bin/javah
fi
if test ! -x $JAVA_HOME/bin/javadoc ; then
    AC_MSG_ERROR([missing $JAVA_HOME/bin/javadoc binary])
else
    JAVADOC=$JAVA_HOME/bin/javadoc
fi
if test ! -x $JAVA_HOME/bin/jar ; then
    AC_MSG_ERROR([missing $JAVA_HOME/bin/jar binary])
else
    JAR=$JAVA_HOME/bin/jar
fi

java_version=`java -version 2>&1 | grep version`
AC_MSG_RESULT(found $java_version)

AC_SUBST(JAVA_HOME)
AC_SUBST(JAVA)
AC_SUBST(JAVAH)
AC_SUBST(JAVAC)
AC_SUBST(JAVADOC)
AC_SUBST(JAR)

dnl
dnl then find the jni.h include file usually in the include subdir
dnl
JNI_CFLAGS=

if test -f $JAVA_HOME/include/jni.h ; then
    JNI_CFLAGS="-I$JAVA_HOME/include"
else
if test "`find $JAVA_HOME -name jni.h`" != "" ; then
    head=`find $JAVA_HOME -name jni.h | tail -1`
    dir=`dirname $head`
    JNI_CFLAGS="-I$dir"
fi
fi

dnl
dnl then one need to find jni_md.h too usually in a system specific subdir
dnl
case "$build_os" in
    *linux*)
        system="linux"
	;;
    *cygwin*)
        system="win32"
	;;
    *)
        system="$build_os"
	;;
esac

if test -f $JAVA_HOME/include/$system/jni_md.h ; then
    JNI_CFLAGS="$JNI_CFLAGS -I$JAVA_HOME/include/$system"
else
if test "`find $JAVA_HOME -name jni_md.h`" != "" ; then
    head=`find $JAVA_HOME -name jni_md.h | tail -1`
    dir=`dirname $head`
    JNI_CFLAGS="$JNI_CFLAGS -I$dir"
fi
fi
AC_SUBST(JNI_CFLAGS)

dnl
dnl Depending on the JAVAC version used one may need additional version flag
dnl
JAVAC_FLAGS=
javac_version=`$JAVAC -version 2>&1`
case "$javac_version" in
    *Eclipse*)
        JAVAC_FLAGS="-source 1.5"
	;;
esac
AC_SUBST(JAVAC_FLAGS)

# very annoying
rm -f COPYING
cp COPYING.LIB COPYING

AC_OUTPUT(Makefile src/Makefile src/jni/Makefile doc/Makefile libvirt-java.pc libvirt-java.spec)
